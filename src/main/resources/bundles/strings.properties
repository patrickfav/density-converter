main.label.source=Source
main.label.scaletype=Scale Type
main.rb.factor=Source Scale Factor
main.rb.widthdp=Width in dp
main.rb.heightdp=Height in dp
main.rb.simplopt=Simple Mode
main.rb.advopt=Advanced Mode

main.label.fixedW=Fixed Width:
main.label.fixedH=Fixed Height:
main.label.dp=dp
main.label.factor=Factor (x{0})

main.label.dst=Destination
main.label.platform=Platform
main.label.compression=Compression
main.label.jpgquality=JPG Quality
main.label.rounding=Rounding
main.label.threads=Threads
main.label.downscale=Down-Scaling
main.label.upscale=Up-Scaling
main.label.whypostproc=Why disabled?

main.header.options=Options
main.btn.reset=Reset
main.cb.skipexisting=skip existing
main.cb.skipupscaling=skip upscaling
main.cb.verbose=verbose
main.cb.dryrun=dry run
main.cb.halterror=halt on error
main.cb.androidldpi=android: include ldpi + tvdpi
main.cb.antialiasing=anti aliasing
main.cb.androidmipmap=android: mipmap instead drawable
main.cb.keepUnoptimized=keep unprocessed
main.cb.ioimageset=iOS: create .imageset folders + Content.json
main.cb.clean=clean out dir before convert

main.header.postprocessors=Post Processors
main.cb.pngcrush=compress with pngcrush
main.cb.webp=compress with webp
main.cb.mozjpeg=compress with mozJpeg


main.btn.convert=Convert

main.alert.title=Errors during execution
main.alert.content=There were {0} errors while execution. See log for details.

main.dirchooser.titel=Select Image Folder
main.filechooser.titel=Select Image
main.label.finish=Finished Jobs: {0} / Errors: {1} / Duration: {2}

arg.descr.scalefactor=Base source scale as factor (1,1.5,2,3,4,etc.); used if the images already have the correct resolution for one scale factor and up- and downscaling for all other densities is needed.
arg.descr.widthdp=Set the width in dp (density independent pixels) which denotes the pixel output in mdpi/x1. In this mode all output images will have the same width
arg.descr.heightdp=Set the height in dp (density independent pixels) which denotes the pixel output in mdpi/x1. In this mode all output images will have the same height.
arg.descr.scaleslider=Sets the scale factor of the source file(s). Based on this all the other scale types will be calculated.
arg.descr.platform=Defines which formats will be generated
arg.descr.compression=Sets the output compression type.
arg.descr.jpegquality=JPEG compression quality. 1.0 is best but biggest file size. Will be ignored for png and gif.
arg.descr.rounding=The used rounding mode for calculating the dimensions for the different scale factors
arg.descr.threads=Max parallel worker threads. More is faster but requires more memory.
arg.descr.skipexisting=If set will not overwrite a already existing file
arg.descr.skipupscaling=If set will only scale down, but not up to prevent image quality loss
arg.descr.verbose=Shows verbose log
arg.descr.cmd.verbose=If set will log to console more verbose
arg.descr.dryrun=Will not create any images or folder. Useful as fast preview in log what images in what resolutions would be created.
arg.descr.halterror=If set will stop the process if an error occurred during conversion
arg.descr.androidldpi=Android only: If set will include additional densities (ldpi and tvdpi)
arg.descr.antialiasing=Anti-aliases images creating a little more blurred result; a light 3x3 convolve matrix is used; useful for very small images
arg.descr.androidmipmap=Android only: creates mipmap sub-folders instead of drawable.
arg.descr.pngcrush=Will post-process all pngs with pngcrush, a lossless compressor. The executable must be set in the system PATH as 'pngcrush' i.e executable from every path. Pngcrush is a tool to compress pngs. Requires v1.7.22+
arg.descr.webp=Will additionally convert all png/gif to lossless wepb and all jpg to lossy webp with cwebp. Does not delete source files. The executable must be set in the system path as 'cwebp' i.e executable from every path. cwebp is the official converter from Google.
arg.descr.keeporiginal=If a post processor is run on a file, this flag will ensure that the original will be kept (renamed _orig), otherwise only the optimized image will be kept
arg.descr.cmd.version=Gets current version
arg.descr.cmd.gui=Starts graphical user interface
arg.descr.cmd.help=This help page
arg.descr.cmd.dpIsHeight=If set and scale is in dp it will be interpreted as fixed height not width
arg.descr.mozjpeg=Will post-process all jpegs with mozJpegs lossless compressor 'jpegtran'. Mozjpeg (specifically 'jpegtran') must be set in PATH, tested with mozJpeg 3. Binaries for mozJpeg can be found on the internet.
arg.descr.iosimageset=iOS only: Will create .imageset folders and Content.json for every source image n iOS converter. Default is just all images in the root folder.
arg.descr.cmd.compression=Only used with compression ''jpg'' sets the quality [0-1.0] where 1.0 is the highest quality. Default is {0}
arg.descr.cmd.outcompression=Sets the compression of the converted images. Can be 'png', 'jpg', 'gif', 'bmp', 'png+jpg' or 'strict' which tries to use same compression as source. By default will convert to png except if source compression is jpeg.
arg.descr.cmd.rounding=Defines the rounding mode when scaling the dimensions. Possible options are ''round'' (rounds up of >= 0.5), ''floor'' (rounds down) and ''ceil'' (rounds up). Default is {0}
arg.descr.cmd.threads=Sets the count of max parallel threads (more is faster but uses more memory). Possible values are 1-8. Default is {0}
arg.descr.cmd.platform=Can be ''all'', ''android'', ''ios'', ''win'' or ''web''. Sets what formats the converted images will be generated for. E.g. set ''android'' if you only want to convert to android format. Default is {0}
arg.descr.scalingalgo=Sets the scaling algorithm for either up- ord downscaling. Unfortunately there is no 'perfect' scaling algorithm it always depends on the specific use. Scaling is always a compromise between aliasing, blurring and ringing. Usually Lanczos3 is considered very good for up and downscaling, but for icons with sharp edges progressive algorithms may be better for downscaling.
arg.descr.cmd.dst=The directory in which the converted files will be written. Will use the source folder if this argument is omitted.
arg.descr.cmd.scale=The source scale. This can either be a factor (1,1.5,2,3,4,etc.) used if the images already have the correct resolution for one scale factor and up- and downscaling for all other densities are needed. Ie. if you have the src file in density xxxhdpi you pass '4'. You could also pass a value in dp (density independent pixels) which denotes the output pixel width (or height if the flag is set) in mdpi/x1. In this mode all output images will have the same width (height). This argument is mandatory.
arg.descr.cmd.src=The source. Can be an image file or a folder containing image files to be converted. This argument is mandatory.
arg.descr.btnsrcfolder=Select a source folder for batch converting
arg.descr.btndstfolder=Select the destination folder where the scaled image will be created
arg.descr.btnsrcFile=Select the source image file to scale
arg.descr.btnopendstfolder=Open the destination folder
arg.descr.clean=Deletes all file and folders in out dir that would be used in current configuration before converting.

error.parse.dp=could not parse dp: {0} must be a number
error.missing.src=src file/directory must be passed and should exist: {0}
error.invalid.compressionQ=invalid compression quality argument ''{0}'' - must be between (including) 0 and 1.0
error.invalid.thread=invalid thread count given ''{0}'' - must be between (including) 1 and {1}
error.invalid.factorscale=invalid src scale factor given {0} - must be between (excluding) 0.0 and 100
error.invalid.dp=invalid src scale dp given {0} - must be between 1dp and 9999dp
error.missing.platforms=You must select at least 1 platform
error.missing.scalealgorithm=Unknown scale algorithm provided

alert.whypp.title=Why is Post Processor <x> disabled?
alert.whypp.text=This tool requires some external command line applications to be able to support certain post processors. Theses must be set in the PATH environmental variable and executable by this process. Webp requires 'cwebp', pngcrush 'pngcrush' and mozjpeg 'jpegtran' command line tool. For more info see https://github.com/patrickfav/density-converter
enum.outcomp.SAME_AS_INPUT_PREF_PNG=To .png (except .jpg)
enum.outcomp.SAME_AS_INPUT_STRICT=Same as source
enum.outcomp.AS_JPG=To .jpeg
enum.outcomp.AS_PNG=To .png
enum.outcomp.AS_GIF=To .gif
enum.outcomp.AS_BMP=To .bmp
enum.outcomp.AS_JPG_AND_PNG=To .png & .jpeg
